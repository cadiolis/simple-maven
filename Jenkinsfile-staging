def builds = []

def job = jenkins.model.Jenkins.instance.getItem('depshield-master')
job.builds.each {
  def build = it
  if (it.getResult().toString().equals("SUCCESS")) {
    it.badgeActions.each {
      builds.add(build.displayName[1..-1])
    }
  }
}

builds.unique()

properties([
    parameters([
        choice(name: buildId, description: 'Choose Master Build', choices: ${builds})
    ])
])

stage('Staging') {
  def built = build('depshield-master');  // https://plugins.jenkins.io/pipeline-build-step
  copyArtifacts(projectName: 'depshield-master', selector: specific("${built.number}"))

  // Cannot currently use moveComponents since it only allows tag and we need to additionally restrict on format
  // NXRM Core team is working on adding this for us
  //moveComponents destination: 'depshield-raw-staging', nexusInstanceId: 'nxrm3', search: [ 'tag': tag, 'format': 'raw' ]
  //moveComponents destination: 'test-maven-staging', nexusInstanceId: 'nxrm3', search: [ 'tag': tag, 'format': 'maven2' ]

  // in the meantime, direct rest calls

  /*
  // promote raw
  def response = httpRequest url: "http://localhost:8081/service/rest/v1/staging/move/depshield-raw-staging?" +
      "tag=${tag}&format=raw",
      authentication: 'nxrm3-credentials',
      httpMode: 'POST',
      validResponseCodes: '200',
      acceptType: 'APPLICATION_JSON',
      contentType: 'APPLICATION_JSON'
  println("Status: " + response.status)
  println("Content: " + response.content)

  // promote maven (will be docker)
  response = httpRequest url: "http://localhost:8081/service/rest/v1/staging/move/test-maven-staging?" +
      "tag=${tag}&format=maven2",
      authentication: 'nxrm3-credentials',
      httpMode: 'POST',
      validResponseCodes: '200',
      acceptType: 'APPLICATION_JSON',
      contentType: 'APPLICATION_JSON'
  println("Status: " + response.status)
  println("Content: " + response.content)
  */
}
